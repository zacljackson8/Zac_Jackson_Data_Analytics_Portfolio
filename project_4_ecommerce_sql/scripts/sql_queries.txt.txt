-- E-Commerce SQL Analytics Project
-- Author: Zac Jackson
-- Date: October 2025]
-- Description: Six SQL queries for Power BI visualisation


Customer Overview
SELECT 
    COUNT(DISTINCT c.customer_id) AS total_customers,
    COUNT(o.order_id) AS total_orders,
    ROUND(AVG(CAST(o.price AS REAL)), 2) AS avg_order_value,
    ROUND(SUM(CAST(o.price AS REAL)), 2) AS total_revenue
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id;

------------------------------------------------------

Revenue by Region
SELECT 
    c.region,
    ROUND(SUM(CAST(o.price AS REAL)), 2) AS total_revenue,
    COUNT(o.order_id) AS total_orders
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id
GROUP BY c.region
ORDER BY total_revenue DESC
LIMIT 10;

------------------------------------------------------

Monthly Revenue Trend
SELECT 
    strftime('%Y-%m', o.order_date) AS month,
    ROUND(SUM(CAST(o.price AS REAL)), 2) AS total_revenue,
    COUNT(o.order_id) AS total_orders
FROM orders o
GROUP BY month
ORDER BY month;

------------------------------------------------------

Repeat vs New Customers
WITH customer_orders AS (
    SELECT 
        customer_id,
        COUNT(order_id) AS num_orders
    FROM orders
    GROUP BY customer_id
)
SELECT
    SUM(CASE WHEN num_orders = 1 THEN 1 ELSE 0 END) AS new_customers,
    SUM(CASE WHEN num_orders > 1 THEN 1 ELSE 0 END) AS repeat_customers
FROM customer_orders;

------------------------------------------------------

Marketing Channel Performance
SELECT 
    channel,
    ROUND(SUM(CAST(spend AS REAL)), 2) AS total_spend,
    SUM(CAST(clicks AS INTEGER)) AS total_clicks,
    SUM(CAST(conversions AS INTEGER)) AS total_conversions
FROM marketing
GROUP BY channel
ORDER BY total_spend DESC;

------------------------------------------------------

Top 10 High-Value Customers
SELECT 
    c.name,
    c.region,
    COUNT(o.order_id) AS total_orders,
    ROUND(SUM(CAST(o.price AS REAL)), 2) AS total_spent
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
ORDER BY total_spent DESC
LIMIT 10;
